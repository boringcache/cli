[package]
name = "boring_cache_cli"
version = "0.1.0"
edition = "2021"
authors = ["BoringCache Team"]
description = "High-performance cache management CLI for CI/CD workflows"
license = "MIT"

[[bin]]
name = "boringcache"
path = "src/main.rs"

[lib]
name = "boring_cache_cli"
path = "src/lib.rs"

[dependencies]
# CLI parsing - minimal features
clap = { version = "4.5", features = ["derive", "env"] }

# Async runtime - optimized features only (removes ~50-70KB by avoiding unused features)
tokio = { version = "1.48", features = ["rt-multi-thread", "macros", "time", "fs", "io-util", "process"] }

# HTTP client - minimal features (removes TLS backends, cookies, gzip)
reqwest = { version = "0.12", features = ["json", "stream", "rustls-tls"], default-features = false }

# Serialization - core features only
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", default-features = false }
ciborium = "0.2"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Progress reporting
crossbeam-channel = "0.5"
humansize = "2"

# Compression backend
zstd = { version = "0.13", default-features = false, features = ["zstdmt"] }

# File type detection for smart chunking heuristics
infer = "0.19"

# System utilities
dirs = "6.0"

# Crypto - minimal features for content hashing
sha2 = "0.10"

# Fast hashing for fingerprinting and integrity
blake3 = "1.8"

# Concurrent collections for chunk storage
dashmap = "6.1"
nanoid = "0.4"
async-trait = "0.1"
fastrand = "2.3"
rayon = "1.11"

# Async utilities - minimal features
futures-util = { version = "0.3", default-features = false, features = ["std", "sink"] }

# Logging - env-filter via tracing-subscriber, lightweight macros via log
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"], default-features = false }
log = "0.4"

# Time handling - minimal features (clock only, no timezone/locale data)
chrono = { version = "0.4", features = ["clock", "serde"], default-features = false }

# File system utilities
walkdir = "2.5"
tempfile = "3.23"

# URL handling - minimal
urlencoding = { version = "2.1", default-features = false }

# System info - lightweight
num_cpus = "1.17"

# UUID - minimal features only (v4 generation only)
uuid = { version = "1.18", features = ["v4"], default-features = false }
bytes = "1.10.1"

# Unix system calls for disk space checking
[target.'cfg(unix)'.dependencies]
libc = "0.2"

# Windows system calls for disk space checking
[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["fileapi", "winbase"] }

[dev-dependencies]
mockito = "1.7"
tempfile = "3.23"
pretty_assertions = "1.4"

[profile.release]
lto = "fat"           # Maximum link-time optimization
codegen-units = 1     # Single codegen unit for better optimization
strip = true          # Strip symbols for smaller binary
panic = "abort"       # Abort on panic for smaller binary and better performance
opt-level = 3         # Maximum optimization level

[profile.release-static]
inherits = "release"

# Optimized build profile for minimal binary size
[profile.min-size]
inherits = "release"
opt-level = "z"       # Optimize for size over speed
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"     # Strip all unnecessary symbols
